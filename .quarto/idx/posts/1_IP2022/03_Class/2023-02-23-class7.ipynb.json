{"title":"class 7단계","markdown":{"yaml":{"title":"class 7단계","author":"jiyun Lim","date":"02/23/2023","categories":["class","Python"]},"headingText":"클래스공부 7단계","containsRefs":false,"markdown":"\n\n\n> 함수형 프로그래밍, callable object, 파이썬의 비밀\n\n# imports\n\n# 함수공부\n\n`-` 다시 함수를 공부해봅시다.\n\n`-` 함수의 사용방법?\n\n- 입력으로 변수 x를 받음 = 입력으로 인스턴스 x를 받음\n\n- 출력으로 변수 x+1을 리턴 = 출력으로 인스턴스 x+1을 리턴\n\n`-` 사실1: 파이썬에서는 함수는 인스턴스를 입력으로 받고 인스턴스를 출력한다.\n\n`-` 함수의 자료형?\n\n- type이 function이다.\n- f는 function class의 instance이다.\n- 결국 f 역시 하나의 오브젝트에 불과하다.\n\n`-` 사실2: 함수도 결국 인스턴스이다. $\\to$ 함수의 입력으로 함수를 쓸 수도 있고 함수의 출력으로 함수가 나올 수도 있다.\n\n# 함수형 프로그래밍\n\n***함수도 결국 오브젝트에 불과하다***\n\n## (예제1) 숫자입력, 함수출력\n\n- 해석: $f(a)$는 $a$를 입력으로 받고 $g(x)=(x-a)^2$를 함수를 리턴해주는 함수\n\n## (예제1)의 다른 표현: 익명함수 `lambda`\n\n#### 표현1\n\n#### 표현2\n\n- `lambda x: (x-a)**2`는 $\\text{lambda}(x) = (x-a)^2$의 느낌으로 기억하면 외우기 쉽다.\n\n- `lambda x: (x-a)**2`는 \"아직 이름이 없는 함수 오브젝트를 (가칭 lambda라고 하자) 만들고 기능은 x를 입력으로 하고 (x-2)**2를 출력하도록 하자\" 라는 뜻으로 해석하면 된다.\n\n## (예제2) 함수입력, 숫자출력\n\n$$f'(x)\\approx \\frac{f(x+h)-f(x)}{h}$$\n\n- $h$의 값이 점점 0에 가까울수록 등호에 가까워짐.\n\n## (예제3) 함수입력, 함수출력\n\n**원래함수 시각화**\n\n**도함수 시각화**\n\n## (예제3)의 다른 표현\n\n## (예제4) 함수들의 리스트\n\n[오브젝트, 오브젝트, 오브젝트]\n\n- 첫번째 함수에 적용될 때는 2출력, 2번째 함수에 적용될 때는 4출력, 3번째 함수에 적용될 때는 8출력\n\n위의 코드는 아래와 같음.\n\n# 정리\n\n`-` 지금까지 개념\n\n- 함수: 변수를 입력으로 받아서 변수를 출력하는 개념\n- 변수: 어떠한 값을 저장하는 용도로 쓰거나 함수의 입력 혹은 출력으로 사용함\n\n`-` 파이썬의 함수형 프로그래밍을 잘하려면? (객체지향적 언어의특징)\n\n- 변수든 함수든 둘 다 인스턴스임.\n- 변수를 함수처럼: 메소드\n- 함수를 변수처럼($\\star$): 함수자체를 함수의 입력으로 혹은 출력으로 쓸 수도 있음. 함수를 특정 값처럼 생각해서 함수들의 list를 만들 수도 있었다.\n\n# callable object\n\n`-` 함수 오브젝트의 비밀?\n\n`-` 함수 오브젝트에는 숨겨진 기능 `__call__`이 있다.\n\n- 여기에 우리가 정의한 내용이 있다.\n\n`-` 함수처럼 쓸 수 없는 인스턴스는 단지 call이 없는 것일 뿐이다.\n\n- a는 callable이 아니라고 한다.\n\n- b는 callable object! 즉, 숨겨진 메소드로 `__call__`를 가진 오브젝트\n\n- Klass는 callable object를 만들지 못하지만 Klass2는 callable object를 만든다.\n\n`-` 클래스로 함수를 만들기\n\n`-` 클래스도 그러고보니까 `오브젝트` 아니었나? 클래스도 함수처럼 `Klass()`와 같이 사용하면 인스턴스를 만들었음. $\\to$ `Klass.__call__()`은 `Klass()`와 같은 역할을 할 것이다.\n\n# 파이썬의 비밀 1~4\n\n- 파이썬의 비밀1: 자료형은 클래스의 이름이다.\n- 파이썬의 비밀2: 클래스에는 `__str__` 처럼 숨겨진 매서드가 존재한다. 이를 이용하여 파이썬 내부의 기능을 가로챌 수 있다.\n- 파이썬의 비밀3: 주피터노트북(대화형 콘솔)에서는 \"오브젝트이름 + 엔터\"를 쳐서 나오는 출력은 `__repr__`로 가로챌 수 있다. (주피터의 비밀)\n- 파이썬의 비밀4: 함수와 클래스는 숨겨진 메소드에 `__call__`을 가진 오브젝트일 뿐이다.\n- 파이썬의 비밀5: **NEXT** (클래스공부 8단계에서)\n","srcMarkdownNoYaml":"\n\n# 클래스공부 7단계\n\n> 함수형 프로그래밍, callable object, 파이썬의 비밀\n\n# imports\n\n# 함수공부\n\n`-` 다시 함수를 공부해봅시다.\n\n`-` 함수의 사용방법?\n\n- 입력으로 변수 x를 받음 = 입력으로 인스턴스 x를 받음\n\n- 출력으로 변수 x+1을 리턴 = 출력으로 인스턴스 x+1을 리턴\n\n`-` 사실1: 파이썬에서는 함수는 인스턴스를 입력으로 받고 인스턴스를 출력한다.\n\n`-` 함수의 자료형?\n\n- type이 function이다.\n- f는 function class의 instance이다.\n- 결국 f 역시 하나의 오브젝트에 불과하다.\n\n`-` 사실2: 함수도 결국 인스턴스이다. $\\to$ 함수의 입력으로 함수를 쓸 수도 있고 함수의 출력으로 함수가 나올 수도 있다.\n\n# 함수형 프로그래밍\n\n***함수도 결국 오브젝트에 불과하다***\n\n## (예제1) 숫자입력, 함수출력\n\n- 해석: $f(a)$는 $a$를 입력으로 받고 $g(x)=(x-a)^2$를 함수를 리턴해주는 함수\n\n## (예제1)의 다른 표현: 익명함수 `lambda`\n\n#### 표현1\n\n#### 표현2\n\n- `lambda x: (x-a)**2`는 $\\text{lambda}(x) = (x-a)^2$의 느낌으로 기억하면 외우기 쉽다.\n\n- `lambda x: (x-a)**2`는 \"아직 이름이 없는 함수 오브젝트를 (가칭 lambda라고 하자) 만들고 기능은 x를 입력으로 하고 (x-2)**2를 출력하도록 하자\" 라는 뜻으로 해석하면 된다.\n\n## (예제2) 함수입력, 숫자출력\n\n$$f'(x)\\approx \\frac{f(x+h)-f(x)}{h}$$\n\n- $h$의 값이 점점 0에 가까울수록 등호에 가까워짐.\n\n## (예제3) 함수입력, 함수출력\n\n**원래함수 시각화**\n\n**도함수 시각화**\n\n## (예제3)의 다른 표현\n\n## (예제4) 함수들의 리스트\n\n[오브젝트, 오브젝트, 오브젝트]\n\n- 첫번째 함수에 적용될 때는 2출력, 2번째 함수에 적용될 때는 4출력, 3번째 함수에 적용될 때는 8출력\n\n위의 코드는 아래와 같음.\n\n# 정리\n\n`-` 지금까지 개념\n\n- 함수: 변수를 입력으로 받아서 변수를 출력하는 개념\n- 변수: 어떠한 값을 저장하는 용도로 쓰거나 함수의 입력 혹은 출력으로 사용함\n\n`-` 파이썬의 함수형 프로그래밍을 잘하려면? (객체지향적 언어의특징)\n\n- 변수든 함수든 둘 다 인스턴스임.\n- 변수를 함수처럼: 메소드\n- 함수를 변수처럼($\\star$): 함수자체를 함수의 입력으로 혹은 출력으로 쓸 수도 있음. 함수를 특정 값처럼 생각해서 함수들의 list를 만들 수도 있었다.\n\n# callable object\n\n`-` 함수 오브젝트의 비밀?\n\n`-` 함수 오브젝트에는 숨겨진 기능 `__call__`이 있다.\n\n- 여기에 우리가 정의한 내용이 있다.\n\n`-` 함수처럼 쓸 수 없는 인스턴스는 단지 call이 없는 것일 뿐이다.\n\n- a는 callable이 아니라고 한다.\n\n- b는 callable object! 즉, 숨겨진 메소드로 `__call__`를 가진 오브젝트\n\n- Klass는 callable object를 만들지 못하지만 Klass2는 callable object를 만든다.\n\n`-` 클래스로 함수를 만들기\n\n`-` 클래스도 그러고보니까 `오브젝트` 아니었나? 클래스도 함수처럼 `Klass()`와 같이 사용하면 인스턴스를 만들었음. $\\to$ `Klass.__call__()`은 `Klass()`와 같은 역할을 할 것이다.\n\n# 파이썬의 비밀 1~4\n\n- 파이썬의 비밀1: 자료형은 클래스의 이름이다.\n- 파이썬의 비밀2: 클래스에는 `__str__` 처럼 숨겨진 매서드가 존재한다. 이를 이용하여 파이썬 내부의 기능을 가로챌 수 있다.\n- 파이썬의 비밀3: 주피터노트북(대화형 콘솔)에서는 \"오브젝트이름 + 엔터\"를 쳐서 나오는 출력은 `__repr__`로 가로챌 수 있다. (주피터의 비밀)\n- 파이썬의 비밀4: 함수와 클래스는 숨겨진 메소드에 `__call__`을 가진 오브젝트일 뿐이다.\n- 파이썬의 비밀5: **NEXT** (클래스공부 8단계에서)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"2023-02-23-class7.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"cosmo","code-copy":true,"title-block-banner":true,"title":"class 7단계","author":"jiyun Lim","date":"02/23/2023","categories":["class","Python"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}