{"title":"04wk-2: 파이썬의 자료형 (7) -- O","markdown":{"yaml":{"title":"04wk-2: 파이썬의 자료형 (7) -- O","author":"jiyunLim","date":"09/21/2023","categories":["파이썬의 자료형"]},"headingText":"강의영상","containsRefs":false,"markdown":"\n\n> 딕셔너리 컴프리헨션, 셋 컴프리헨션\n\n\n> youtube:\n> <https://youtube.com/playlist?list=PLQqh36zP38-yyWy5IzZwxEX_dHX53cBJh>\n\n# 딕셔너리 고급내용 (2)\n\n## key의 조건\n\n`-` 조건1: 키로 쓸 수 있는 자료형은 정해져 있다.\n\n-   int O, float O, bool O, str O, list X, tuple O, dict X, set X\n\n(예시1) dict의 키로 int를 사용\n\n(예시2) dict의 키로 float을 사용 \\<– 이렇게 쓰는 사람 본적이 없어요\n\n(예시3) dict의 키로 bool을 사용\n\n(예시4) dict의 키로 str을 사용 ($\\star$)\n\n(예시5) dict의 키로 list를 사용 $\\Rightarrow$ 불가능\n\n(예시6) dict의 키로 tuple 사용 ($\\star$)\n\n(예시7) dict의 키로 dict사용 $\\Rightarrow$ 불가능\n\n(예시8) dict의 키로 set사용 $\\Rightarrow$ 불가능\n\n`-` 조건2: 키는 중복해서 쓸 수 없다.\n\n(예시1)\n\n## value의 조건\n\n`-` 없다… $\\Rightarrow$ dict는 컨테이너형!!\n\n## 딕셔너리 컴프리헨션\n\n`-` 예시1\n\n`-` 예시2: key, val을 서로 바꾸는 예시\n\n## 바꿔치기 (3)\n\n`-` 예제1: 아래와 같은 리스트가 있다고 하자.\n\n아래의 규칙에 의하여 lst의 각 원소의 값을 바꾸고 싶다고 하자.\n\n| 변환전 |   변환후    |\n|:------:|:-----------:|\n|  ‘a’   | \\[1,0,0,0\\] |\n|  ‘b’   | \\[0,1,0,0\\] |\n|  ‘c’   | \\[0,0,1,0\\] |\n|  ‘d’   | \\[0,0,0,1\\] |\n\n이를 구현하는 코드를 작성하고, 역변환하는 코드를 작성하라.\n\nhint: 아래의 dct를 이용할 것\n\n(풀이)\n\n변환하는 코드를 구현하면\n\n역변환하는 코드를 구현하면\n\n(1단계)\n\n**역변환**\n\n(2단계)\n\n***내생각***\n\n위와 같은 코드는 경우에 따라서 아래와 같은 복잡합 코드를 피할 수 있는\n장점이 있다.\n\n`-` 예제2: 아래와 같은 리스트가 있다고 하자. – 강의를 재촬영 했습니다.\n\n아래와 같은 규칙에 따라서 바꾸고 싶다고 하자.\n\n|  변환전  | 변환후 |\n|:--------:|:------:|\n|   딸기   |  과일  |\n|   사과   |  과일  |\n|  바나나  |  과일  |\n| 오토바이 |  탈것  |\n|  자동차  |  탈것  |\n|   버스   |  탈것  |\n|   기차   |  탈것  |\n\n(풀이1)\n\n(풀이2) – 지난시간에 한 것\n\n위에 코드를 중첩구조로 만들면 아래와 같다.\n\n(풀이3)\n\n# 집합 기본내용\n\n## 선언\n\n## 원소추출\n\n`-` 일단 인덱스로는 못합니다.\n\n`-` 딱히 하는 방법이 없어요.. 그리고 이걸 하는 의미가 없어요.. (원소에\n접근해서 뭐하려고??)\n\n## 원소추가\n\n`-` 이건 의미가 있음\n\n## 원소삭제\n\n## 연산\n\n`-` in 연산자\n\n-   참고로 `in`연산자는 집합에서만 쓰는것은 아님\n\n`-` 합집합, 교집합, 차집합\n\n`-` 부분집합\n\n## 집합 특수기능\n\n`-` 합집합\n\n`-` 나머지 메소드는 스스로 찾아보세요\n\n## for문과 set\n\n# 집합 고급내용\n\n## set 컴프리헨션\n\n`-` 예시1\n\n## 유니크한 원소\n\n::: {.callout-tip}\n\n중복되는 원소가 사라진다는 것이 집합의 장점!\n:::\n\n`-` 예제1: 아래의 list는 모두 몇 종류의 문자로 이루어져 있는가?\n\n***참고*** : `.count`\n\n(풀이)\n\n`-` 예제2: 아래의 txt에서 어떠한 종류의 문자가 각각 몇번씩 사용되었는지\n빈도를 구하는 코드를 작성하라.\n\n(풀이)\n\n# HW\n\n`Oxford-III`: 1–5 //\n[reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\n이미지파일이 저장된 형식은 아래와 같다.\n\n    Abyssinian_1.jpg\n    British_Shorthair_129.jpg\n\n**note**: `British_Shorthair`와 같이 종 이름 사이에 `_`가 들어있는\n경우도 있음.\n\n`1`. txt를 적당히 변환하여 아래와 같은 list를 만들어라.\n\n**hint1**\n\n**hint2**\n\n(풀이1)\n\n(풀이2)\n\n(확인)\n\n`2`. 그림파일에는 총 몇가지 종류의 고양이와, 몇가지 종류의 강아지가\n있는가?\n\n**note:** 고양이사진은 대문자로 시작하고, 강아지 사진은 소문자로\n시작한다.\n\n**note**: 12종의 고양이, 25종의 강아지가 있음\n\n(풀이)\n\n`3`. 아래는 1번의 결과로 얻어진 lst의 첫 10개의 원소와 마지막 10개의\n원소이다.\n\n적당한 변환을 정의하여 lst를 아래와 같이 바꾸어라.\n\n```python\nlst2[:10], lst2[-10:] # 바뀐 lst\n\n(['cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat'],\n ['dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog'])\n```\n\n(풀이1)\n\n(풀이2)\n\n`4`. txt에는 강아지사진과 고양이사진이 모두 몇장씩 들어있는가?\n\n```\n# 출력예시\n{'dog': 4990, 'cat': 2403}\n```\n\n(풀이)\n\n`5`. txt에 각 종별로 몇장의 사진이 있는지 조사하라.\n\n```\n## 출력예시 \n\n{'beagle': 200,\n 'scottishterrier': 199,\n 'newfoundland': 200,\n 'Birman': 200,\n 'Bombay': 200,\n 'pug': 200,\n 'germanshorthaired': 200,\n 'samoyed': 200,\n 'Sphynx': 200,\n 'englishsetter': 200,\n 'Bengal': 200,\n 'MaineCoon': 200,\n 'Persian': 200,\n 'boxer': 200,\n 'staffordshirebullterrier': 191,\n 'Siamese': 200,\n 'bassethound': 200,\n 'wheatenterrier': 200,\n 'englishcockerspaniel': 200,\n 'Ragdoll': 200,\n 'yorkshireterrier': 200,\n 'EgyptianMau': 200,\n 'BritishShorthair': 200,\n 'keeshond': 200,\n 'RussianBlue': 200,\n 'saintbernard': 200,\n 'americanbulldog': 200,\n 'Abyssinian': 203,\n 'leonberger': 200,\n 'greatpyrenees': 200,\n 'japanesechin': 200,\n 'pomeranian': 200,\n 'chihuahua': 200,\n 'shibainu': 200,\n 'americanpitbullterrier': 200,\n 'miniaturepinscher': 200,\n 'havanese': 200}\n```\n\n(풀이)\n","srcMarkdownNoYaml":"\n\n> 딕셔너리 컴프리헨션, 셋 컴프리헨션\n\n# 강의영상\n\n> youtube:\n> <https://youtube.com/playlist?list=PLQqh36zP38-yyWy5IzZwxEX_dHX53cBJh>\n\n# 딕셔너리 고급내용 (2)\n\n## key의 조건\n\n`-` 조건1: 키로 쓸 수 있는 자료형은 정해져 있다.\n\n-   int O, float O, bool O, str O, list X, tuple O, dict X, set X\n\n(예시1) dict의 키로 int를 사용\n\n(예시2) dict의 키로 float을 사용 \\<– 이렇게 쓰는 사람 본적이 없어요\n\n(예시3) dict의 키로 bool을 사용\n\n(예시4) dict의 키로 str을 사용 ($\\star$)\n\n(예시5) dict의 키로 list를 사용 $\\Rightarrow$ 불가능\n\n(예시6) dict의 키로 tuple 사용 ($\\star$)\n\n(예시7) dict의 키로 dict사용 $\\Rightarrow$ 불가능\n\n(예시8) dict의 키로 set사용 $\\Rightarrow$ 불가능\n\n`-` 조건2: 키는 중복해서 쓸 수 없다.\n\n(예시1)\n\n## value의 조건\n\n`-` 없다… $\\Rightarrow$ dict는 컨테이너형!!\n\n## 딕셔너리 컴프리헨션\n\n`-` 예시1\n\n`-` 예시2: key, val을 서로 바꾸는 예시\n\n## 바꿔치기 (3)\n\n`-` 예제1: 아래와 같은 리스트가 있다고 하자.\n\n아래의 규칙에 의하여 lst의 각 원소의 값을 바꾸고 싶다고 하자.\n\n| 변환전 |   변환후    |\n|:------:|:-----------:|\n|  ‘a’   | \\[1,0,0,0\\] |\n|  ‘b’   | \\[0,1,0,0\\] |\n|  ‘c’   | \\[0,0,1,0\\] |\n|  ‘d’   | \\[0,0,0,1\\] |\n\n이를 구현하는 코드를 작성하고, 역변환하는 코드를 작성하라.\n\nhint: 아래의 dct를 이용할 것\n\n(풀이)\n\n변환하는 코드를 구현하면\n\n역변환하는 코드를 구현하면\n\n(1단계)\n\n**역변환**\n\n(2단계)\n\n***내생각***\n\n위와 같은 코드는 경우에 따라서 아래와 같은 복잡합 코드를 피할 수 있는\n장점이 있다.\n\n`-` 예제2: 아래와 같은 리스트가 있다고 하자. – 강의를 재촬영 했습니다.\n\n아래와 같은 규칙에 따라서 바꾸고 싶다고 하자.\n\n|  변환전  | 변환후 |\n|:--------:|:------:|\n|   딸기   |  과일  |\n|   사과   |  과일  |\n|  바나나  |  과일  |\n| 오토바이 |  탈것  |\n|  자동차  |  탈것  |\n|   버스   |  탈것  |\n|   기차   |  탈것  |\n\n(풀이1)\n\n(풀이2) – 지난시간에 한 것\n\n위에 코드를 중첩구조로 만들면 아래와 같다.\n\n(풀이3)\n\n# 집합 기본내용\n\n## 선언\n\n## 원소추출\n\n`-` 일단 인덱스로는 못합니다.\n\n`-` 딱히 하는 방법이 없어요.. 그리고 이걸 하는 의미가 없어요.. (원소에\n접근해서 뭐하려고??)\n\n## 원소추가\n\n`-` 이건 의미가 있음\n\n## 원소삭제\n\n## 연산\n\n`-` in 연산자\n\n-   참고로 `in`연산자는 집합에서만 쓰는것은 아님\n\n`-` 합집합, 교집합, 차집합\n\n`-` 부분집합\n\n## 집합 특수기능\n\n`-` 합집합\n\n`-` 나머지 메소드는 스스로 찾아보세요\n\n## for문과 set\n\n# 집합 고급내용\n\n## set 컴프리헨션\n\n`-` 예시1\n\n## 유니크한 원소\n\n::: {.callout-tip}\n\n중복되는 원소가 사라진다는 것이 집합의 장점!\n:::\n\n`-` 예제1: 아래의 list는 모두 몇 종류의 문자로 이루어져 있는가?\n\n***참고*** : `.count`\n\n(풀이)\n\n`-` 예제2: 아래의 txt에서 어떠한 종류의 문자가 각각 몇번씩 사용되었는지\n빈도를 구하는 코드를 작성하라.\n\n(풀이)\n\n# HW\n\n`Oxford-III`: 1–5 //\n[reference](https://www.robots.ox.ac.uk/~vgg/data/pets/)\n\n아래는 이미지 파일명들이 저장된 string을 불러오는 코드이다.\n\n이미지파일이 저장된 형식은 아래와 같다.\n\n    Abyssinian_1.jpg\n    British_Shorthair_129.jpg\n\n**note**: `British_Shorthair`와 같이 종 이름 사이에 `_`가 들어있는\n경우도 있음.\n\n`1`. txt를 적당히 변환하여 아래와 같은 list를 만들어라.\n\n**hint1**\n\n**hint2**\n\n(풀이1)\n\n(풀이2)\n\n(확인)\n\n`2`. 그림파일에는 총 몇가지 종류의 고양이와, 몇가지 종류의 강아지가\n있는가?\n\n**note:** 고양이사진은 대문자로 시작하고, 강아지 사진은 소문자로\n시작한다.\n\n**note**: 12종의 고양이, 25종의 강아지가 있음\n\n(풀이)\n\n`3`. 아래는 1번의 결과로 얻어진 lst의 첫 10개의 원소와 마지막 10개의\n원소이다.\n\n적당한 변환을 정의하여 lst를 아래와 같이 바꾸어라.\n\n```python\nlst2[:10], lst2[-10:] # 바뀐 lst\n\n(['cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat', 'cat'],\n ['dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog', 'dog'])\n```\n\n(풀이1)\n\n(풀이2)\n\n`4`. txt에는 강아지사진과 고양이사진이 모두 몇장씩 들어있는가?\n\n```\n# 출력예시\n{'dog': 4990, 'cat': 2403}\n```\n\n(풀이)\n\n`5`. txt에 각 종별로 몇장의 사진이 있는지 조사하라.\n\n```\n## 출력예시 \n\n{'beagle': 200,\n 'scottishterrier': 199,\n 'newfoundland': 200,\n 'Birman': 200,\n 'Bombay': 200,\n 'pug': 200,\n 'germanshorthaired': 200,\n 'samoyed': 200,\n 'Sphynx': 200,\n 'englishsetter': 200,\n 'Bengal': 200,\n 'MaineCoon': 200,\n 'Persian': 200,\n 'boxer': 200,\n 'staffordshirebullterrier': 191,\n 'Siamese': 200,\n 'bassethound': 200,\n 'wheatenterrier': 200,\n 'englishcockerspaniel': 200,\n 'Ragdoll': 200,\n 'yorkshireterrier': 200,\n 'EgyptianMau': 200,\n 'BritishShorthair': 200,\n 'keeshond': 200,\n 'RussianBlue': 200,\n 'saintbernard': 200,\n 'americanbulldog': 200,\n 'Abyssinian': 203,\n 'leonberger': 200,\n 'greatpyrenees': 200,\n 'japanesechin': 200,\n 'pomeranian': 200,\n 'chihuahua': 200,\n 'shibainu': 200,\n 'americanpitbullterrier': 200,\n 'miniaturepinscher': 200,\n 'havanese': 200}\n```\n\n(풀이)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"2023-03-29-4wk-2.out.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"cosmo","code-copy":true,"title-block-banner":true,"title":"04wk-2: 파이썬의 자료형 (7) -- O","author":"jiyunLim","date":"09/21/2023","categories":["파이썬의 자료형"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}