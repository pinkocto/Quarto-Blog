{"title":"04wk-1: Pandas – 기본기능, missing, query, 할당, transform column","markdown":{"yaml":{"title":"04wk-1: Pandas – 기본기능, missing, query, 할당, transform column","author":"JiyunLim","date":"09/25/2023","categories":["Pandas"]},"headingText":"1. 강의영상","containsRefs":false,"markdown":"\n\n> 데이터가 깔끔하지 않을 때를 위한 자잘한 팁 (missing, filtering, assign, 행변환)\n\n\n# 2. Imports\n\n# 3. Pandas: 기본기능\n\n## A. 열의 이름 변경\n\n`-` 방법1: `df.columns`에 대입\n\n`-` 방법2: `df.set_axis()`\n\n`-` 방법3: `df.rename()`\n\n## B. 행의 이름 변경\n\n`-` 방법1: `df.index`에 대입\n\n- row이름을 index\n\n`-` 방법2: `df.set_axis()`\n\n`-` 방법3: `df.rename()`\n\n- 데이터 프레임의 row name을 바꾸는 경우는 거의 없다... (Timeseries일 경우를 제외하고는?)\n\n`-` 방법4: 임의의 열을 행이름으로 지정!\n\n## `#` A~B에 대한 연습문제\n\n`-` 데이터 load\n\n`# 예제1`: 열의 이름 출력하고, 열의 이름중 공백(``)이 있을 경우\n언더바(`_`) 로 바꾸자.\n\n컬럼출력\n\n1.  `df.columns`에 직접대입\n\n1.  `set_axis()` 이용\n\n1.  `rename()` 이용 – 안중요함\n\n`#`\n\n`예제2`: ID를 row-index로 지정하라.\n\n1.  직접지정\n\n1.  `set_axis()`\n\n1.  `rename()` – 안중요함\n\n1.  `set_index()`\n\n`#`\n\n## C. `pd.T`\n\n`-` `df.T`를 이용하여 데이터를 살피면 편리함\n\n`-` 출력옵션 조정\n\n-   이 예제에서는 줄이는 옵션을 사용했지만 보통은 늘려서 사용함\n\n## D. `df.dtypes`, `s.dtype`\n\n`-` `df.dtypes`\n\n- \"object는 거의 string이구나\" 라고 생각해도 무방.\n\n`-` `s.dtype`\n\n`-` `==`를 이용한 자료형 체크\n\n`# 예제`: `df`에서 `int64` 자료형만 출력\n\n`-` (풀이1)\n\n`-` (풀이2)\n\n## E. `df.sort_values()`\n\n`-` 예시1: 나이가 어린 순서대로 정렬\n\n`-` 예시2: 나이가 많은 순서대로 정렬\n\n`-` 예시3: 능력치가 좋은 순서대로 정렬\n\n## F. `df.info()`\n\n각 컬럼에 들어있는 데이터 타입 혹은 missing에 대한 정보를 한꺼번에 알고싶다면 `df.info()` 를 사용하면 된다.\n\n## G. `df.isna()`\n\n`-` 예시1: 열별로 결측치 count\n\n`-` 예시2: 결측치가 50% 이상인 열 출력\n\n## H. `df.drop()`\n\n`-` 예시1: \\[0,1,2,3\\] 행을 drop\n\n`-` 예시2: \\[‘Name’, ‘Age’\\] 열을 drop\n\n## `#` G~H 에 대한 연습문제\n\n`# 예제`: 결측치가 50퍼 이상인 열을 제외하라.\n\n`-` (풀이1)\n\n`-` (풀이2)\n\n# 4. Pandas: missing\n\n> numpy와 pandas에서의 missing이 좀 다르다.\n\n## A. Numpy\n\n`-` 발생: `np.nan`\n\n`-` np.array에 nan이 있으면 연산결과도 nan\n\n`-` type\n\n## B. Pandas\n\n> Pandas Sereis로 바꾸게 되면? NAN값을 빈칸으로 생각.\n\n`-` 발생: np.nan, pd.NA\n\n`-` pd.Series에 `NaN` 혹은 `<NA>` 가 있다면 연산할때 제외함\n\n`-` type\n\n- Pandas 내부적으로 숨겨져 있는데 NAType.\n\n`-` 검출 ($\\star$)\n\n- `nan`도 missing, `na`도 missing 이라고 판단한다.\n\n- 똑같은지 아닌지 의심스러우면 `id`로 확인하면 된다.\n\n# 5. Pandas: query\n\n> 조건에 맞는 sub dataframe을 뽑고싶을때 매우 유용하다.\n\n## A. 기본 query\n\n`-` 예시1: `A>0 and B<0`\n\n`-` 예시2: `A<B<C`\n\n`-` 예시3: `(A+B)/2 > 0`\n\n`-` 예시4: `(A+B/2) > 0` and `E=='A'`\n\n## B. 외부변수를 이용\n\n`-` 예시1: `A > mean(A)`\n\n## C. Index로 query\n\n`-` 예시: (2022년 12월30일 보다 이전 날짜) $\\cup$ (2023년 1월10일)\n\n- 공백이 있는 변수들은 사용이 안되었었는데 지금은 된다.\n\n## D. 열의 이름에 공백이 있을 경우\n\n`-` 예시1: 열의 이름에 공백이 있으면 백틱(``)을 이용하면 된다.\n\n# 6. Pandas: 할당\n\n> Pandas 할당하는 방법에는 3가지 방법이 있다.\n\n## <font color='blue'>A. `df.assign()` -- 추천($\\star$)</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n> Note: 이 방법은 df를 일시적으로 변화시킴\n\n## <font color='blue'>B. `df.eval()`</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n- 복잡한 경우 잘 적용이 안되는 경우가 있음.\n\n> 이 방법은 df를 일시적으로 변화시킴\n\n## <font color='red'>C. `df[colname] = xxx`</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n- **싫어하는 이유는 원래 데이터프레임을 손상시킨다.**\n\n> 이 방법은 df를 영구적으로 변화시킴\n\n# 7. Pandas: transform column\n\n## A. `lambda`\n\n`-` 예시1: $x \\to x+2$\n\n- `(lambda x: x+2)` 통째로 함수역할을 한다.\n\n`-` 예시2: $x,y \\to x+y$\n\n`-` 예시3: ‘2023-09’ $\\to$ 9\n\n`-` 예시4: ‘2023-09’ $\\to$ (2023,9)\n\n`-` 예시5: 문자열이 ‘cat’이면 1 ’dog’ 이면 0 // ’cat이면 1 ’cat’이\n아니면 0\n\n`-` Note: `f`로 이름을 정하지 않고 직접 사용 가능\n\n## B. `map`\n\n`-` 개념: `map(f,[x1,x2,...xn])=[f(x1),f(x2),...,f(xn)]`\n\n`-` 예시1: `x->x+1`을 `[1,2,3]`에 적용\n\nmap(함수비슷한것(callable), 리스트비슷한것(iterable))\n\n`-` 예시2 `df.Height`열 변환하기\n\n`# 예시3` `df.Height`열 변환하기 + 변환된 열 할당하기\n\n`-` (풀이1): df.assign(Height=새롭게 잘 변환한 리스트 같은 것.)\n\n- Height가 int로 바뀐 것을 확인할 수 있다.\n\n`-` (풀이2) – 사실 수틀리면 컴프리헨션 쓰면 된다.\n\n`#`\n\n`# 예시4` – `df.Position` 열에 아래와 같은 변환을 수행하고, 변환된 열을\n할당하라.\n\n|            before             | after |\n|:-----------------------------:|:-----:|\n| `<span class=\"pos pos28\">SUB` | `SUB` |\n| `<span class=\"pos pos15\">LCM` | `LCM` |\n|  `<span class=\"pos pos7\">LB`  | `LB`  |\n| `<span class=\"pos pos13\">RCM` | `RCM` |\n| `<span class=\"pos pos13\">RCM` | `RCM` |\n\n`-` (풀이1)\n\n`-` (풀이2) – 리스트컴프리헨션\n\n먼저 함수를 f라고 받아놓자.\n\n-   개인의견: 이미 람다로 함수를 만들어야 해서 그냥 map을 쓰는게\n    자연스러움\n\n## C. `s.apply(변환함수)`\n\n`-` 예시: 원소별로 처음3개의 숫자만 출력\n\n## D. `s.str`\n\n`-` 예시1: 원소별로 처음 3개의 숫자만 출력\n\n`-` 예시2: 원소별로 isupper를 수행\n\n## E. `s.astype()`\n\n`-` 예시1: 원소의 타입을 모두 `int`형으로 변경\n\n`-` 예시2: 원소별로 (1) 처음3개의 문자열만 취하고 (2) 원소의 타입을 모두\n인트형으로 변경\n\n# 8. HW\n\n`-` 문제: 아래의 자료에서 입학년도를 추가하고 싶다면?\n\n![![download.png](attachment:782789ca-dc22-4f2c-9dc8-6da37f924776.png)](attachment:95eb405b-fc88-41ff-8f56-656f8d4fea9c.png)\n","srcMarkdownNoYaml":"\n\n> 데이터가 깔끔하지 않을 때를 위한 자잘한 팁 (missing, filtering, assign, 행변환)\n\n# 1. 강의영상\n\n# 2. Imports\n\n# 3. Pandas: 기본기능\n\n## A. 열의 이름 변경\n\n`-` 방법1: `df.columns`에 대입\n\n`-` 방법2: `df.set_axis()`\n\n`-` 방법3: `df.rename()`\n\n## B. 행의 이름 변경\n\n`-` 방법1: `df.index`에 대입\n\n- row이름을 index\n\n`-` 방법2: `df.set_axis()`\n\n`-` 방법3: `df.rename()`\n\n- 데이터 프레임의 row name을 바꾸는 경우는 거의 없다... (Timeseries일 경우를 제외하고는?)\n\n`-` 방법4: 임의의 열을 행이름으로 지정!\n\n## `#` A~B에 대한 연습문제\n\n`-` 데이터 load\n\n`# 예제1`: 열의 이름 출력하고, 열의 이름중 공백(``)이 있을 경우\n언더바(`_`) 로 바꾸자.\n\n컬럼출력\n\n1.  `df.columns`에 직접대입\n\n1.  `set_axis()` 이용\n\n1.  `rename()` 이용 – 안중요함\n\n`#`\n\n`예제2`: ID를 row-index로 지정하라.\n\n1.  직접지정\n\n1.  `set_axis()`\n\n1.  `rename()` – 안중요함\n\n1.  `set_index()`\n\n`#`\n\n## C. `pd.T`\n\n`-` `df.T`를 이용하여 데이터를 살피면 편리함\n\n`-` 출력옵션 조정\n\n-   이 예제에서는 줄이는 옵션을 사용했지만 보통은 늘려서 사용함\n\n## D. `df.dtypes`, `s.dtype`\n\n`-` `df.dtypes`\n\n- \"object는 거의 string이구나\" 라고 생각해도 무방.\n\n`-` `s.dtype`\n\n`-` `==`를 이용한 자료형 체크\n\n`# 예제`: `df`에서 `int64` 자료형만 출력\n\n`-` (풀이1)\n\n`-` (풀이2)\n\n## E. `df.sort_values()`\n\n`-` 예시1: 나이가 어린 순서대로 정렬\n\n`-` 예시2: 나이가 많은 순서대로 정렬\n\n`-` 예시3: 능력치가 좋은 순서대로 정렬\n\n## F. `df.info()`\n\n각 컬럼에 들어있는 데이터 타입 혹은 missing에 대한 정보를 한꺼번에 알고싶다면 `df.info()` 를 사용하면 된다.\n\n## G. `df.isna()`\n\n`-` 예시1: 열별로 결측치 count\n\n`-` 예시2: 결측치가 50% 이상인 열 출력\n\n## H. `df.drop()`\n\n`-` 예시1: \\[0,1,2,3\\] 행을 drop\n\n`-` 예시2: \\[‘Name’, ‘Age’\\] 열을 drop\n\n## `#` G~H 에 대한 연습문제\n\n`# 예제`: 결측치가 50퍼 이상인 열을 제외하라.\n\n`-` (풀이1)\n\n`-` (풀이2)\n\n# 4. Pandas: missing\n\n> numpy와 pandas에서의 missing이 좀 다르다.\n\n## A. Numpy\n\n`-` 발생: `np.nan`\n\n`-` np.array에 nan이 있으면 연산결과도 nan\n\n`-` type\n\n## B. Pandas\n\n> Pandas Sereis로 바꾸게 되면? NAN값을 빈칸으로 생각.\n\n`-` 발생: np.nan, pd.NA\n\n`-` pd.Series에 `NaN` 혹은 `<NA>` 가 있다면 연산할때 제외함\n\n`-` type\n\n- Pandas 내부적으로 숨겨져 있는데 NAType.\n\n`-` 검출 ($\\star$)\n\n- `nan`도 missing, `na`도 missing 이라고 판단한다.\n\n- 똑같은지 아닌지 의심스러우면 `id`로 확인하면 된다.\n\n# 5. Pandas: query\n\n> 조건에 맞는 sub dataframe을 뽑고싶을때 매우 유용하다.\n\n## A. 기본 query\n\n`-` 예시1: `A>0 and B<0`\n\n`-` 예시2: `A<B<C`\n\n`-` 예시3: `(A+B)/2 > 0`\n\n`-` 예시4: `(A+B/2) > 0` and `E=='A'`\n\n## B. 외부변수를 이용\n\n`-` 예시1: `A > mean(A)`\n\n## C. Index로 query\n\n`-` 예시: (2022년 12월30일 보다 이전 날짜) $\\cup$ (2023년 1월10일)\n\n- 공백이 있는 변수들은 사용이 안되었었는데 지금은 된다.\n\n## D. 열의 이름에 공백이 있을 경우\n\n`-` 예시1: 열의 이름에 공백이 있으면 백틱(``)을 이용하면 된다.\n\n# 6. Pandas: 할당\n\n> Pandas 할당하는 방법에는 3가지 방법이 있다.\n\n## <font color='blue'>A. `df.assign()` -- 추천($\\star$)</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n> Note: 이 방법은 df를 일시적으로 변화시킴\n\n## <font color='blue'>B. `df.eval()`</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n- 복잡한 경우 잘 적용이 안되는 경우가 있음.\n\n> 이 방법은 df를 일시적으로 변화시킴\n\n## <font color='red'>C. `df[colname] = xxx`</font>\n\n`-` 예시: `total = att*0.1 + rep*0.2 + mid*0.35 + fin*0.35` 를 계산하여\n할당\n\n- **싫어하는 이유는 원래 데이터프레임을 손상시킨다.**\n\n> 이 방법은 df를 영구적으로 변화시킴\n\n# 7. Pandas: transform column\n\n## A. `lambda`\n\n`-` 예시1: $x \\to x+2$\n\n- `(lambda x: x+2)` 통째로 함수역할을 한다.\n\n`-` 예시2: $x,y \\to x+y$\n\n`-` 예시3: ‘2023-09’ $\\to$ 9\n\n`-` 예시4: ‘2023-09’ $\\to$ (2023,9)\n\n`-` 예시5: 문자열이 ‘cat’이면 1 ’dog’ 이면 0 // ’cat이면 1 ’cat’이\n아니면 0\n\n`-` Note: `f`로 이름을 정하지 않고 직접 사용 가능\n\n## B. `map`\n\n`-` 개념: `map(f,[x1,x2,...xn])=[f(x1),f(x2),...,f(xn)]`\n\n`-` 예시1: `x->x+1`을 `[1,2,3]`에 적용\n\nmap(함수비슷한것(callable), 리스트비슷한것(iterable))\n\n`-` 예시2 `df.Height`열 변환하기\n\n`# 예시3` `df.Height`열 변환하기 + 변환된 열 할당하기\n\n`-` (풀이1): df.assign(Height=새롭게 잘 변환한 리스트 같은 것.)\n\n- Height가 int로 바뀐 것을 확인할 수 있다.\n\n`-` (풀이2) – 사실 수틀리면 컴프리헨션 쓰면 된다.\n\n`#`\n\n`# 예시4` – `df.Position` 열에 아래와 같은 변환을 수행하고, 변환된 열을\n할당하라.\n\n|            before             | after |\n|:-----------------------------:|:-----:|\n| `<span class=\"pos pos28\">SUB` | `SUB` |\n| `<span class=\"pos pos15\">LCM` | `LCM` |\n|  `<span class=\"pos pos7\">LB`  | `LB`  |\n| `<span class=\"pos pos13\">RCM` | `RCM` |\n| `<span class=\"pos pos13\">RCM` | `RCM` |\n\n`-` (풀이1)\n\n`-` (풀이2) – 리스트컴프리헨션\n\n먼저 함수를 f라고 받아놓자.\n\n-   개인의견: 이미 람다로 함수를 만들어야 해서 그냥 map을 쓰는게\n    자연스러움\n\n## C. `s.apply(변환함수)`\n\n`-` 예시: 원소별로 처음3개의 숫자만 출력\n\n## D. `s.str`\n\n`-` 예시1: 원소별로 처음 3개의 숫자만 출력\n\n`-` 예시2: 원소별로 isupper를 수행\n\n## E. `s.astype()`\n\n`-` 예시1: 원소의 타입을 모두 `int`형으로 변경\n\n`-` 예시2: 원소별로 (1) 처음3개의 문자열만 취하고 (2) 원소의 타입을 모두\n인트형으로 변경\n\n# 8. HW\n\n`-` 문제: 아래의 자료에서 입학년도를 추가하고 싶다면?\n\n![![download.png](attachment:782789ca-dc22-4f2c-9dc8-6da37f924776.png)](attachment:95eb405b-fc88-41ff-8f56-656f8d4fea9c.png)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"2023-09-25-04wk-1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"cosmo","code-copy":true,"title-block-banner":true,"title":"04wk-1: Pandas – 기본기능, missing, query, 할당, transform column","author":"JiyunLim","date":"09/25/2023","categories":["Pandas"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}