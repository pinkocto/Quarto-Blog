{"title":"**[STBDA]** 2wk. 텐서플로우 intro1 (tf.constant선언, tnp사용법)","markdown":{"yaml":{"title":"**[STBDA]** 2wk. 텐서플로우 intro1 (tf.constant선언, tnp사용법) ","author":"JiyunLim","date":"05/10/2023","categories":["빅데이터분석특강"]},"headingText":"(2주차) 3월14일","containsRefs":false,"markdown":"\n\n\n### 강의노트 \n\n> youtube: https://youtube.com/playlist?list=PLQqh36zP38-z8oR8bQZHR0mpy_9OcsWOz\n\n### import \n\n### tf.constant \n\n#### 예비학습: 중첩리스트 \n\n`-` 리스트\n\n`-` (2,2) matrix 느낌의 list\n\n위를 아래와 같은 매트릭스로 생각할수 있다. \n\n```\n1 2 \n3 4 \n```\n\n`-` (4,1) matrix 느낌의 list \n\n`-` (1,4) matrix 느낌의 list \n\n#### 선언 (변수 선언하는 법?)\n\n- 텐서플로우를 쓰려면 텐서로 바꿔줘야 한다.\n\n`-` 스칼라 \n\n`-` 벡터\n\n`-` 매트릭스\n\n`-` array\n\n#### 타입\n\n- EagerTensor 타입이라는 것만 기억!\n\n#### 인덱싱 \n\n#### tf.constant는 불편하다. \n\n`-` 불편한점\n1. 모든 원소가 같은 dtype을 가지고 있어야함. \n2. 원소 수정이 불가능함. \n3. 묵시적 형변환이 불가능하다. \n\n`-` 원소수정이 불가능함 \n\n`-` 묵시적 형변환이 불가능하다 \n\n- 1을 float으로 암묵적으로 바꿔서 계산함.\n\n- int와 float이라 에러나는 것\n\n`-` 같은 float도 안되는 경우가 있음 \n\n- 조금만 틀리면 에러남..\n\n#### tf.constant $\\to$ 넘파이 \n\n- numpy로 연산을 다 해놓고 tensor로 바꾼다..\n\n#### 연산\n\n`-` 더하기 \n\n처음에 int로 선언했으면 나머지도 모두 int로 선언해야해..\n\n- 결과는 동일\n\n`-` 곱하기\n\n`-` 매트릭스의곱 \n\n`-` 역행렬 \n\n- 1/2을 계산하려면 애초에 float형이어야 했음.\n\n`-` `tf.linalg.` + `tab`을 누르면 좋아보이는 연산들 많음 \n\n#### 형태변환\n\n`-` 기본: tf.reshape() 를 이용\n\n`-` 다차원\n\n`-` tf.reshape\n\n#### 선언고급 \n\n뭔가를 초기화할 때 필요한 기능을 정리한 것입니다.\n\n`-` 다른 자료형 (리스트나 넘파이)로 만들고 바꾸는것도 좋다.\n\n`-` tf.ones, tf.zeros\n\n`-` range(10) \n\n`-` tf.linspace\n\n#### tf.concat \n\n`-` (2,1) concat (2,1) => (2,2)\n- 두번째 축이 바뀌었다. => axis=1\n\n`-` (2,1) concat (2,1) => (4,1)\n- 첫번째 축이 바뀌었다. => axis=0\n\n`-` (1,2) concat (1,2) => (2,2) \n- 첫번째 // axis=0\n\n`-` (1,2) concat (1,2) => (1,4) \n- 두번째 // axis=1\n\n`-` (2,3,4,5) concat (2,3,4,5) => (4,3,4,5) \n- 첫번째 // axis=0\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,6,4,5) \n- 두번째 // axis=1\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,3,8,5) \n- 세번째 // axis=2\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,3,4,10) \n- 네번째 // axis=3 # 0,1,2,3 // -4 -3 -2 -1\n\n`-` (4,) concat (4,) => (8,)\n- 첫번째축? // axis=0\n\n`-` (4,) concat (4,) => (4,2) \n- 두번째축? // axis=1 ==> 이런거없다..\n\n- 에러남! 이럴때는 `tf.stack`을 쓰면 된다. \n\n#### tf.stack \n\n> stack은 차원이 늘어남!\n\n### tnp\n\n`-` tf는 넘파이에 비하여 텐서만들기가 너무힘듬 \n\n- 넘파이는 이런식으로 `np.diag()`도 쓸수 있고 reshape을 메소드로 쓸 수도 있는데... \n\n#### tnp 사용방법 (불만해결방법)\n\ntensorflow에서 numpy처럼 동작하도록 할 수 있는 모듈이라고 생각 즉,  np의 모방버전으로 생각하면 된다.\n\n- 이렇게 만들어도 된다.\n\n`-` int와 float을 더할 수 있음\n\n- tnp 모듈을 불러오는 순간 tf로 선언하는 모든 것들도 우리가 알고있는 넘파이처럼 동작합니다.\n\n#### 선언고급\n\n#### 타입\n\n#### tf.contant로 만들어도 마치 넘파이인듯 쓰는 기능들\n\n`-` 묵시적형변환이 가능\n\nint랑 float을 계산할 수 있다는 것\n\n`-` 메소드를 쓸수 있음. \n\n사용가능한 메소드가 많아짐..\n\n#### 그렇지만 np.array는 아님 \n\n`-` 원소를 할당하는것은 불가능 \n\n- 그냥 새로 만들어서 할당해야 함. (그래도 많이 개선된 것@)\n","srcMarkdownNoYaml":"\n\n# (2주차) 3월14일\n\n### 강의노트 \n\n> youtube: https://youtube.com/playlist?list=PLQqh36zP38-z8oR8bQZHR0mpy_9OcsWOz\n\n### import \n\n### tf.constant \n\n#### 예비학습: 중첩리스트 \n\n`-` 리스트\n\n`-` (2,2) matrix 느낌의 list\n\n위를 아래와 같은 매트릭스로 생각할수 있다. \n\n```\n1 2 \n3 4 \n```\n\n`-` (4,1) matrix 느낌의 list \n\n`-` (1,4) matrix 느낌의 list \n\n#### 선언 (변수 선언하는 법?)\n\n- 텐서플로우를 쓰려면 텐서로 바꿔줘야 한다.\n\n`-` 스칼라 \n\n`-` 벡터\n\n`-` 매트릭스\n\n`-` array\n\n#### 타입\n\n- EagerTensor 타입이라는 것만 기억!\n\n#### 인덱싱 \n\n#### tf.constant는 불편하다. \n\n`-` 불편한점\n1. 모든 원소가 같은 dtype을 가지고 있어야함. \n2. 원소 수정이 불가능함. \n3. 묵시적 형변환이 불가능하다. \n\n`-` 원소수정이 불가능함 \n\n`-` 묵시적 형변환이 불가능하다 \n\n- 1을 float으로 암묵적으로 바꿔서 계산함.\n\n- int와 float이라 에러나는 것\n\n`-` 같은 float도 안되는 경우가 있음 \n\n- 조금만 틀리면 에러남..\n\n#### tf.constant $\\to$ 넘파이 \n\n- numpy로 연산을 다 해놓고 tensor로 바꾼다..\n\n#### 연산\n\n`-` 더하기 \n\n처음에 int로 선언했으면 나머지도 모두 int로 선언해야해..\n\n- 결과는 동일\n\n`-` 곱하기\n\n`-` 매트릭스의곱 \n\n`-` 역행렬 \n\n- 1/2을 계산하려면 애초에 float형이어야 했음.\n\n`-` `tf.linalg.` + `tab`을 누르면 좋아보이는 연산들 많음 \n\n#### 형태변환\n\n`-` 기본: tf.reshape() 를 이용\n\n`-` 다차원\n\n`-` tf.reshape\n\n#### 선언고급 \n\n뭔가를 초기화할 때 필요한 기능을 정리한 것입니다.\n\n`-` 다른 자료형 (리스트나 넘파이)로 만들고 바꾸는것도 좋다.\n\n`-` tf.ones, tf.zeros\n\n`-` range(10) \n\n`-` tf.linspace\n\n#### tf.concat \n\n`-` (2,1) concat (2,1) => (2,2)\n- 두번째 축이 바뀌었다. => axis=1\n\n`-` (2,1) concat (2,1) => (4,1)\n- 첫번째 축이 바뀌었다. => axis=0\n\n`-` (1,2) concat (1,2) => (2,2) \n- 첫번째 // axis=0\n\n`-` (1,2) concat (1,2) => (1,4) \n- 두번째 // axis=1\n\n`-` (2,3,4,5) concat (2,3,4,5) => (4,3,4,5) \n- 첫번째 // axis=0\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,6,4,5) \n- 두번째 // axis=1\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,3,8,5) \n- 세번째 // axis=2\n\n`-` (2,3,4,5) concat (2,3,4,5) => (2,3,4,10) \n- 네번째 // axis=3 # 0,1,2,3 // -4 -3 -2 -1\n\n`-` (4,) concat (4,) => (8,)\n- 첫번째축? // axis=0\n\n`-` (4,) concat (4,) => (4,2) \n- 두번째축? // axis=1 ==> 이런거없다..\n\n- 에러남! 이럴때는 `tf.stack`을 쓰면 된다. \n\n#### tf.stack \n\n> stack은 차원이 늘어남!\n\n### tnp\n\n`-` tf는 넘파이에 비하여 텐서만들기가 너무힘듬 \n\n- 넘파이는 이런식으로 `np.diag()`도 쓸수 있고 reshape을 메소드로 쓸 수도 있는데... \n\n#### tnp 사용방법 (불만해결방법)\n\ntensorflow에서 numpy처럼 동작하도록 할 수 있는 모듈이라고 생각 즉,  np의 모방버전으로 생각하면 된다.\n\n- 이렇게 만들어도 된다.\n\n`-` int와 float을 더할 수 있음\n\n- tnp 모듈을 불러오는 순간 tf로 선언하는 모든 것들도 우리가 알고있는 넘파이처럼 동작합니다.\n\n#### 선언고급\n\n#### 타입\n\n#### tf.contant로 만들어도 마치 넘파이인듯 쓰는 기능들\n\n`-` 묵시적형변환이 가능\n\nint랑 float을 계산할 수 있다는 것\n\n`-` 메소드를 쓸수 있음. \n\n사용가능한 메소드가 많아짐..\n\n#### 그렇지만 np.array는 아님 \n\n`-` 원소를 할당하는것은 불가능 \n\n- 그냥 새로 만들어서 할당해야 함. (그래도 많이 개선된 것@)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"2022_03_14_(2주차)_3월14일.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"cosmo","code-copy":true,"title-block-banner":true,"title":"**[STBDA]** 2wk. 텐서플로우 intro1 (tf.constant선언, tnp사용법) ","author":"JiyunLim","date":"05/10/2023","categories":["빅데이터분석특강"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}