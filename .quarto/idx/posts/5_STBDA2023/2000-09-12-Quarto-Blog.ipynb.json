{"title":"**[STBDA]** Quarto Blog 만들기","markdown":{"yaml":{"title":"**[STBDA]** Quarto Blog 만들기","author":"최규빈","date":"09/12/2000"},"headingText":"1. 준비","containsRefs":false,"markdown":"\n\n\n`-` 윈도우 컴퓨터인 경우 새로운 계정을 만들어 준다.\n\n-   한글계정명일 경우는 필수\n-   영어계정이더라도 계정을 분리하는게 관리에 유리\n\n`-` 최종적으로는\n\n1.  github 로그인 + repository 생성완료\n2.  anaconda 설치완료\n3.  git 설치완료\n4.  quarto 설치완료\n\n이어야 한다.\n\n## A. Github\n\n1.  github 로그인\n2.  repository 생성 (저는 asdf로 만들었어요)\n\n> 주의: repository 만들때 readme.md 파일을 생성 할 것. 그래야 이후의\n> 작업이 편리.\n\n## B. Anaconda\n\n1.  아나콘다 다운로드: <https://www.anaconda.com/download>\n2.  아나콘다 설치\n3.  그림1처럼 terminal을 열었을 경우 (base)로 표시되는지 확인\n4.  그림2처럼 `conda env list`등의 명령어가 잘 동작하는지 확인\n\n### 그림1\n\n![그림1: 정상적으로 설치된 경우 (base)가\n보임](attachment:A1_files/figure-ipynb/54db32b8-88a9-4406-b53e-81c255c2db7d-1-792156c8-5be0-4c26-bb31-06955100413f.png)\n\n### 그림2\n\n![그림2: 정상적으로 설치된 경우 cond env list 등의 명령이 잘 동작함.\n현재환경은 \\*로\n표시됨](attachment:A1_files/figure-ipynb/54db32b8-88a9-4406-b53e-81c255c2db7d-2-a909dc60-cd8c-498a-8785-677f55dad84a.png)\n\n## C. Git\n\n1.  git 다운로드: <https://git-scm.com/downloads>\n2.  설치\n3.  terminal에서 `git`을 입력하여 정상적으로 설치되었는지 확인. 그림3\n    참고.\n\n> 본인이 편리한 경우 github desktop 혹은 sourcetree 등에서 작업해도\n> 무방함. 하지만 수업에서는 다루지 않음.\n\n![그림3: git이 정상적으로 설치된 경우\n출력예시](attachment:A1_files/figure-ipynb/28dc4be7-b03d-41e6-980b-f0acab971f22-1-b36ae87d-a850-49b9-9d28-e23395eda4db.png)\n\n## D. Quarto\n\n1.  quarto 다운로드: <https://quarto.org/docs/download/> 에서\n    pre-release 버전을 다운로드 할 것 (기능이 좀 더 많음)\n2.  설치\n3.  터미널에서 `quarto help`를 입력하여 정상적으로 설치되었는지 확인.\n    그림4 참고.\n\n![그림4: quarto가 정상적으로 설치된 경우\n출력예시](attachment:A1_files/figure-ipynb/ff936722-5226-4783-be84-a15709e69cc0-1-17c1b8d6-23c9-404c-9840-d10bc9d7e361.png)\n\n# 2. 가상환경 설정\n\n`-` 가상환경 만들기, activate, 주피터랩 설치\n\n``` bash\nconda create -n mp python=3.10 # 가상환경만들기\nconda activate mp # 가상환경 activate\nconda install -c conda-forge notebook # 주피터노트북(=랩과 통합됨) 설치 \n```\n\n`-` 주피터랩 실행\n\n``` bash\njupyter lab \n```\n\n# 3. Local $\\leftrightarrow$ Github\n\n`-` 깃헙레포지토리 접속\n\n`-` 주소복사. 그림5 참고. 그림5의 화면이 나오지 않는다면 레포지토리를 잘\n못 만든 것임\n\n![그림5: github repo -\\> code -\\> local, https:// -\\> 복사버튼. 이\n예시의 경우 복사가 정상적으로 되었다면\n“https://github.com/guebin/asdf.git” 이\n복사되어야함](attachment:A1_files/figure-ipynb/b76cada8-c63d-42b9-9ac9-048fa75afe3f-1-07fcf238-0b50-473e-b85f-a818c49d586f.png)\n\n`-` 터미널을 열고 clone\n\n``` bash\ngit clone https://github.com/guebin/asdf.git\n```\n\n> 클론이 정상적으로 되었다면 레포지토리 명의 폴더가 생성됨 (이 예시의\n> 경우 asdf 폴더)\n\n`-` 클론된 폴더에서 readme.md 파일을 수정\n\n`-` local(개인컴퓨터)에서 github으로 변경사항 업로드\n\n``` bash\ngit add .\ngit commit -m .\ngit push \n```\n\n# 4. 블로그 생성\n\n`-` 깃헙레포지토리로 이동한뒤에 아래의 명령어를 입력:\n\n``` bash\nquarto create-project --type website --template blog\n```\n\n위의 명령어를 실행하면 여러가지 설정파일들이 생성된다.\n\n`-` 블로그 publish\n\n``` bash\nquarto publish gh-pages\n```\n\n`-` 깃헙으로 이동하여 확인\n\n-   window는 자동으로 퍼블리쉬 된다.\n-   mac에서는 수동으로 gh-pages로 바꿔야함.\n\n# 5. 새로운 포스트 생성\n\n`-` 아무 노트북이나 만들어본다. (혹은 이미 만들어진 노트북을 넣어본다.)\n\n-   예시1: <https://guebin.github.io/PP2023/> 에서 아무거나 다운로드\n-   예시2: `git clone https://github.com/guebin/PP2023.git`\n\n`-` 노트북을 posts 폴더에 넣는다.\n\n`-` 아래를 통하여 preview 이미지를 확인.\n\n``` bash\nquarto preview \n```\n\n`-` 퍼블리쉬\n\n``` bash\nquarto publish --no-prompt\n```\n\n# 6. 블로그 설정변경\n\n`-` `index.qmd` 메인에 보이는 화면\n\n    ---\n    title: \"기계학습활용 (2023)\"\n    listing:\n      contents: posts\n      sort: \"date\"\n      type: table\n      categories: true\n      sort-ui: false\n      filter-ui: false\n    page-layout: full\n    title-block-banner: false\n    ---\n\n    **질문하는 방법**\n\n    - 카카오톡: [질문하러 가기](http://pf.kakao.com/_skxnxdG/chat) // 학기종료이후 폐쇄함\n    - 이메일: <guebin@jbnu.ac.kr>\n    - 직접방문: 자연과학대학 본관 205호 \n    - Zoom: *카카오톡이나 이메일로 미리 시간을 정할 것*\n    - LMS쪽지: <https://ieilms.jbnu.ac.kr/>\n\n    **references**\n\n    **공지사항** \n\n    - 강의영상의 경우 시간이 지나면 고화질로 시청할 수 있습니다. (인코딩중에는 유튜브에서 저화질로 송출됩니다)\n    - **9월7일 대면수업**: Quarto를 이용한 기술블로그 만들기 + 타이타닉 자료에 대한 발표/토론 \n\n    **강의노트** \n\n`-` `_quarto.yml`\n\n    project:\n      type: website\n\n    website:\n      title: \"MP2023\"\n      navbar:\n        right:\n          - icon: github    \n            href: https://github.com/guebin/MP2023\n          - icon: youtube\n            href: https://www.youtube.com/channel/UCQk9RyBNgXc7ORIsYlOfQrg/playlists?view=50&sort=dd&shelf_id=2\n    format:\n      html:\n        theme: cosmo\n        css: styles.css\n\n`-` posts 폴더에서 `_metadata.yml`\n\n    # options specified here will apply to all posts in this folder\n\n    # freeze computational output\n    # (see https://quarto.org/docs/projects/code-execution.html#freeze)\n    execute:\n      freeze: auto  # re-render only when source changes\n\n    # Enable banner style title blocks\n    title-block-banner: false\n\n    notebook-links: true\n    cap-location: margin\n    reference-location: margin\n    citation-location: margin\n\n    format:\n      html:\n        toc: true\n        code-fold: false\n        code-line-numbers: false\n        code-copy: true\n      ipynb: default\n\n`-` 기타 자세한 옵션은 아래에서 뒤져볼 것\n\n-   ref: <https://quarto.org/>\n\n# 7. 이해\n\n`-` 아래를 입력\n\n``` bash\ngit add .\ngit commit -m .\ngit switch gh-pages\n```\n\n-   폴더내용 확인\n\n`-` 다시 원래대로 돌아오기\n\n``` bash\ngit switch main\n```\n\n`-` quarto publish 의 역할\n\n-   `.ipynb` 파일을 어떠한 규칙에 따라 변환하여 `.html`파일로 바꿈\n-   바꾼 파일들을 `gh-pages`라는 이름의 브랜치로 옮김\n-   `gh-pages` 브랜치를 github 으로 push\n-   이후에는 github이 알아서 `gh-pages`의 내용을 웹이 뿌려줌.\n\n`-` 블로그가 깨졌을때 대응하는 방법\n\n-   gh-pages로 이동하여 모든 파일 및 폴더 삭제\n-   `git add .`, `git commit -m .` `git push`를 순서대로 입력\n-   다시 main으로 돌아와서 `quarto publish --no-prompt` 입력\n\n# 8. 추천하는 루틴\n\n`-` 정상적인 상황\n\n``` bash\ngit add .\ngit commit -m .\ngit push \nquarto publish --no-prompt\n```\n\n`-` 포스트 제목 등, 블로그의 수정사항이 바르게 반영되지 않는 상황\n\n``` bash\ngit add .\ngit commit -m .\ngit switch gh-pages\nrm -rf * # 윈도우의 경우 수동으로 모든 파일 삭제\ngit add .\ngit commit -m .\ngit switch main \ngit push \nquarto publish --no-prompt\n```\n","srcMarkdownNoYaml":"\n\n# 1. 준비\n\n`-` 윈도우 컴퓨터인 경우 새로운 계정을 만들어 준다.\n\n-   한글계정명일 경우는 필수\n-   영어계정이더라도 계정을 분리하는게 관리에 유리\n\n`-` 최종적으로는\n\n1.  github 로그인 + repository 생성완료\n2.  anaconda 설치완료\n3.  git 설치완료\n4.  quarto 설치완료\n\n이어야 한다.\n\n## A. Github\n\n1.  github 로그인\n2.  repository 생성 (저는 asdf로 만들었어요)\n\n> 주의: repository 만들때 readme.md 파일을 생성 할 것. 그래야 이후의\n> 작업이 편리.\n\n## B. Anaconda\n\n1.  아나콘다 다운로드: <https://www.anaconda.com/download>\n2.  아나콘다 설치\n3.  그림1처럼 terminal을 열었을 경우 (base)로 표시되는지 확인\n4.  그림2처럼 `conda env list`등의 명령어가 잘 동작하는지 확인\n\n### 그림1\n\n![그림1: 정상적으로 설치된 경우 (base)가\n보임](attachment:A1_files/figure-ipynb/54db32b8-88a9-4406-b53e-81c255c2db7d-1-792156c8-5be0-4c26-bb31-06955100413f.png)\n\n### 그림2\n\n![그림2: 정상적으로 설치된 경우 cond env list 등의 명령이 잘 동작함.\n현재환경은 \\*로\n표시됨](attachment:A1_files/figure-ipynb/54db32b8-88a9-4406-b53e-81c255c2db7d-2-a909dc60-cd8c-498a-8785-677f55dad84a.png)\n\n## C. Git\n\n1.  git 다운로드: <https://git-scm.com/downloads>\n2.  설치\n3.  terminal에서 `git`을 입력하여 정상적으로 설치되었는지 확인. 그림3\n    참고.\n\n> 본인이 편리한 경우 github desktop 혹은 sourcetree 등에서 작업해도\n> 무방함. 하지만 수업에서는 다루지 않음.\n\n![그림3: git이 정상적으로 설치된 경우\n출력예시](attachment:A1_files/figure-ipynb/28dc4be7-b03d-41e6-980b-f0acab971f22-1-b36ae87d-a850-49b9-9d28-e23395eda4db.png)\n\n## D. Quarto\n\n1.  quarto 다운로드: <https://quarto.org/docs/download/> 에서\n    pre-release 버전을 다운로드 할 것 (기능이 좀 더 많음)\n2.  설치\n3.  터미널에서 `quarto help`를 입력하여 정상적으로 설치되었는지 확인.\n    그림4 참고.\n\n![그림4: quarto가 정상적으로 설치된 경우\n출력예시](attachment:A1_files/figure-ipynb/ff936722-5226-4783-be84-a15709e69cc0-1-17c1b8d6-23c9-404c-9840-d10bc9d7e361.png)\n\n# 2. 가상환경 설정\n\n`-` 가상환경 만들기, activate, 주피터랩 설치\n\n``` bash\nconda create -n mp python=3.10 # 가상환경만들기\nconda activate mp # 가상환경 activate\nconda install -c conda-forge notebook # 주피터노트북(=랩과 통합됨) 설치 \n```\n\n`-` 주피터랩 실행\n\n``` bash\njupyter lab \n```\n\n# 3. Local $\\leftrightarrow$ Github\n\n`-` 깃헙레포지토리 접속\n\n`-` 주소복사. 그림5 참고. 그림5의 화면이 나오지 않는다면 레포지토리를 잘\n못 만든 것임\n\n![그림5: github repo -\\> code -\\> local, https:// -\\> 복사버튼. 이\n예시의 경우 복사가 정상적으로 되었다면\n“https://github.com/guebin/asdf.git” 이\n복사되어야함](attachment:A1_files/figure-ipynb/b76cada8-c63d-42b9-9ac9-048fa75afe3f-1-07fcf238-0b50-473e-b85f-a818c49d586f.png)\n\n`-` 터미널을 열고 clone\n\n``` bash\ngit clone https://github.com/guebin/asdf.git\n```\n\n> 클론이 정상적으로 되었다면 레포지토리 명의 폴더가 생성됨 (이 예시의\n> 경우 asdf 폴더)\n\n`-` 클론된 폴더에서 readme.md 파일을 수정\n\n`-` local(개인컴퓨터)에서 github으로 변경사항 업로드\n\n``` bash\ngit add .\ngit commit -m .\ngit push \n```\n\n# 4. 블로그 생성\n\n`-` 깃헙레포지토리로 이동한뒤에 아래의 명령어를 입력:\n\n``` bash\nquarto create-project --type website --template blog\n```\n\n위의 명령어를 실행하면 여러가지 설정파일들이 생성된다.\n\n`-` 블로그 publish\n\n``` bash\nquarto publish gh-pages\n```\n\n`-` 깃헙으로 이동하여 확인\n\n-   window는 자동으로 퍼블리쉬 된다.\n-   mac에서는 수동으로 gh-pages로 바꿔야함.\n\n# 5. 새로운 포스트 생성\n\n`-` 아무 노트북이나 만들어본다. (혹은 이미 만들어진 노트북을 넣어본다.)\n\n-   예시1: <https://guebin.github.io/PP2023/> 에서 아무거나 다운로드\n-   예시2: `git clone https://github.com/guebin/PP2023.git`\n\n`-` 노트북을 posts 폴더에 넣는다.\n\n`-` 아래를 통하여 preview 이미지를 확인.\n\n``` bash\nquarto preview \n```\n\n`-` 퍼블리쉬\n\n``` bash\nquarto publish --no-prompt\n```\n\n# 6. 블로그 설정변경\n\n`-` `index.qmd` 메인에 보이는 화면\n\n    ---\n    title: \"기계학습활용 (2023)\"\n    listing:\n      contents: posts\n      sort: \"date\"\n      type: table\n      categories: true\n      sort-ui: false\n      filter-ui: false\n    page-layout: full\n    title-block-banner: false\n    ---\n\n    **질문하는 방법**\n\n    - 카카오톡: [질문하러 가기](http://pf.kakao.com/_skxnxdG/chat) // 학기종료이후 폐쇄함\n    - 이메일: <guebin@jbnu.ac.kr>\n    - 직접방문: 자연과학대학 본관 205호 \n    - Zoom: *카카오톡이나 이메일로 미리 시간을 정할 것*\n    - LMS쪽지: <https://ieilms.jbnu.ac.kr/>\n\n    **references**\n\n    **공지사항** \n\n    - 강의영상의 경우 시간이 지나면 고화질로 시청할 수 있습니다. (인코딩중에는 유튜브에서 저화질로 송출됩니다)\n    - **9월7일 대면수업**: Quarto를 이용한 기술블로그 만들기 + 타이타닉 자료에 대한 발표/토론 \n\n    **강의노트** \n\n`-` `_quarto.yml`\n\n    project:\n      type: website\n\n    website:\n      title: \"MP2023\"\n      navbar:\n        right:\n          - icon: github    \n            href: https://github.com/guebin/MP2023\n          - icon: youtube\n            href: https://www.youtube.com/channel/UCQk9RyBNgXc7ORIsYlOfQrg/playlists?view=50&sort=dd&shelf_id=2\n    format:\n      html:\n        theme: cosmo\n        css: styles.css\n\n`-` posts 폴더에서 `_metadata.yml`\n\n    # options specified here will apply to all posts in this folder\n\n    # freeze computational output\n    # (see https://quarto.org/docs/projects/code-execution.html#freeze)\n    execute:\n      freeze: auto  # re-render only when source changes\n\n    # Enable banner style title blocks\n    title-block-banner: false\n\n    notebook-links: true\n    cap-location: margin\n    reference-location: margin\n    citation-location: margin\n\n    format:\n      html:\n        toc: true\n        code-fold: false\n        code-line-numbers: false\n        code-copy: true\n      ipynb: default\n\n`-` 기타 자세한 옵션은 아래에서 뒤져볼 것\n\n-   ref: <https://quarto.org/>\n\n# 7. 이해\n\n`-` 아래를 입력\n\n``` bash\ngit add .\ngit commit -m .\ngit switch gh-pages\n```\n\n-   폴더내용 확인\n\n`-` 다시 원래대로 돌아오기\n\n``` bash\ngit switch main\n```\n\n`-` quarto publish 의 역할\n\n-   `.ipynb` 파일을 어떠한 규칙에 따라 변환하여 `.html`파일로 바꿈\n-   바꾼 파일들을 `gh-pages`라는 이름의 브랜치로 옮김\n-   `gh-pages` 브랜치를 github 으로 push\n-   이후에는 github이 알아서 `gh-pages`의 내용을 웹이 뿌려줌.\n\n`-` 블로그가 깨졌을때 대응하는 방법\n\n-   gh-pages로 이동하여 모든 파일 및 폴더 삭제\n-   `git add .`, `git commit -m .` `git push`를 순서대로 입력\n-   다시 main으로 돌아와서 `quarto publish --no-prompt` 입력\n\n# 8. 추천하는 루틴\n\n`-` 정상적인 상황\n\n``` bash\ngit add .\ngit commit -m .\ngit push \nquarto publish --no-prompt\n```\n\n`-` 포스트 제목 등, 블로그의 수정사항이 바르게 반영되지 않는 상황\n\n``` bash\ngit add .\ngit commit -m .\ngit switch gh-pages\nrm -rf * # 윈도우의 경우 수동으로 모든 파일 삭제\ngit add .\ngit commit -m .\ngit switch main \ngit push \nquarto publish --no-prompt\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"2000-09-12-Quarto-Blog.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.315","theme":"cosmo","code-copy":true,"title-block-banner":true,"title":"**[STBDA]** Quarto Blog 만들기","author":"최규빈","date":"09/12/2000"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}