[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog ~~~"
  },
  {
    "objectID": "posts/Python/python-test1.html",
    "href": "posts/Python/python-test1.html",
    "title": "Quarto-Blog",
    "section": "",
    "text": "# update가 잘되는지를 위한 테스트ㅠㅠ\n\n\nimport matplotlib.pyplot as plt\n\nplt.plot([1, 2, 3, 4])\nplt.show()"
  },
  {
    "objectID": "posts/Python/2023-02-15-class1.html",
    "href": "posts/Python/2023-02-15-class1.html",
    "title": "class 1단계",
    "section": "",
    "text": "이미지 자료 불러오기 (PIL 이용)\n클래스 성능 정리\n연습문제\n- 예제1\n- 예제2"
  },
  {
    "objectID": "posts/Python/2023-02-15-class1.html#클래스-공부-1단계",
    "href": "posts/Python/2023-02-15-class1.html#클래스-공부-1단계",
    "title": "class 1단계",
    "section": "클래스 공부 1단계",
    "text": "클래스 공부 1단계\n\n클래스 선언 및 사용 예시\n\n\n클래스 선언\n\nclass STOOOP:\n    title = '학교폭력!'\n    url = url1\n    end = '멈춰~~~~'\n    def stop(self):\n        print(self.title)\n        display(Image.open(Image.io.BytesIO(requests.get(self.url).content)))\n        print(self.end)\n                \n\n\n규칙1 : 메소드(=class 안에서 정의된 함수)의 첫번째 인자는 무조건 self\n규칙2 : 메소드에서 class 안에 정의된 변수들 (title, url, end)을 사용하려면 self.변수이름 과 같은 형식으로 쓴다.\n\n즉, self.title, self.url, self.end 와 같은 방식으로 써야한다.\n\n(참고) : 규칙2에서 가끔 self 자리에 STOOOP.title, STOOOP.url, STOOOP.end 와 같이 클래스의 이름을 쓰기도 한다.\n\n\n\n클래스 사용 예시\n\n(예시1) STOOOP 클래스 \\(\\to\\) school 인스턴스 만듦\n\nschool = STOOOP()\n\n\nschool.stop()\n\n학교폭력!\n\n\n\n\n\n멈춰~~~~\n\n\n\n\n(예시2) STOOOP 클래스 \\(\\to\\) kospi 인스턴스 만듦\n\nkospi = STOOOP()\n\n\nkospi.title = 'KOSPI 하락'\n\n\nkospi.stop()\n\nKOSPI 하락\n\n\n\n\n\n멈춰~~~~\n\n\n\n\n\n클래스의 기본성능 정리\n\n성능1 : 틀만 있으면 여러개의 독립적인 컨텐츠를 생성할 수 있다.\n\nschool = STOOOP()\nkospi = STOOOP()\n\n\n함수의 사용법과 비슷하다.\n클래스 이름을 쓰고, 콘텐츠를 구체화하는 과정에서 필요한 입력1, 입력2를 ()에 넣는다. 이때는 STOOOP(입력1, 입력2) 와 같이 생성\n위의 예시는 따로 입력이 없으므로 비워둔 상태이다. 즉, STOOOP() 와 같은 식으로 생성\n\n\n\n성능2 : 생성된 콘텐츠(=인스턴스) 에서 . 을 찍고 접근할 수 있는 여러 자료들에 접근가능하며, 내용도 독립적으로 바꿀 수 있다.\n\nschool.title # 출력\n\n'학교폭력!'\n\n\n\nkospi.title # 출력\n\n'학교폭력!'\n\n\n\nkospi.title = '코스피하락' # 변경\n\n\nkospi.title\n\n'코스피하락'\n\n\n\n\n성능3: 생성된 콘텐츠(=인스턴스)에서, .을 찍고 쓸 수 있는 자체적인 함수(=method)를 독립적으로 사용할 수 있다.\n\nschool.stop()\n\n학교폭력!\n\n\n\n\n\n멈춰~~~~\n\n\n\nkospi.stop()\n\n코스피하락\n\n\n\n\n\n멈춰~~~~"
  },
  {
    "objectID": "posts/Python/2023-02-15-class1.html#연습문제",
    "href": "posts/Python/2023-02-15-class1.html#연습문제",
    "title": "class 1단계",
    "section": "연습문제",
    "text": "연습문제\n\n문제1 : 아래의 클래스를 구현하라.\n- 클래스 내에는 변수 a가 있다. 변수 a의 초기값은 True이다.\n- 클래스에는 show()라는 메소드가 있다. show() 기능은 a의 값을 print하는 기능을 한다.\n\nclass Klass1:\n    a = True # 초기값\n    def show(self):\n        print(self.a)\n\n\nex1 = Klass1()\n\n\nex1.a # 초기값\n\nTrue\n\n\n\nex1.show()\n\nTrue\n\n\n\n\n문제2 : 아래의 클래스를 구현하라.\n- 클래스 내에는 변수 a가 있다. 변수 a의 초기값은 1이다.\n- 클래스에는 up()이라는 메소드가 있다. up()의 기능은 a의 값을 1증가시키는 기능을 한다.\n\nclass Klass2:\n    a = 1 # 초깃값\n    def up(self):\n        self.a = self.a + 1\n\n\nex2 = Klass2()\nex2.a\n\n1\n\n\n\nex2.up()\nex2.a\n\n2\n\n\n\nex2.up()\nex2.a\n\n3\n\n\n\nex2.up()\nex2.a\n\n4\n\n\n\n\n문제3: 아래의 클래스를 구현하라.\n- 클래스 내에는 변수 a가 있다. 변수 a의 초기값은 \\(0\\) 이다.\n- 클래스에는 up(), down(), show() 라는 메소드가 있다. 각각은 a의 값을 1증가, a값을 1감소, a의 값을 print하는 기능을 한다."
  },
  {
    "objectID": "posts/category2/notebook2.html",
    "href": "posts/category2/notebook2.html",
    "title": "test: quarto test2",
    "section": "",
    "text": "22\n\n22"
  },
  {
    "objectID": "posts/DV/dv1.html",
    "href": "posts/DV/dv1.html",
    "title": "Quarto-Blog",
    "section": "",
    "text": "# for test\nimport matplotlib.pyplot as plt\nplt.plot([1,2,3,4], [1,4,9,16],'ro')"
  },
  {
    "objectID": "posts/DV/Untitled.html",
    "href": "posts/DV/Untitled.html",
    "title": "Quarto-Blog",
    "section": "",
    "text": "1+2\n\n3"
  },
  {
    "objectID": "posts/category1/notebook1.html",
    "href": "posts/category1/notebook1.html",
    "title": "test: quarto test1",
    "section": "",
    "text": "1+2\n\n3\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "posts/category1/Untitled.html",
    "href": "posts/category1/Untitled.html",
    "title": "test: quarto test2",
    "section": "",
    "text": "test 입니다."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto-Blog",
    "section": "",
    "text": "class 1단계\n\n\n\n\n\n\n\nclass\n\n\n\n\n\n\n\n\n\n\n\nFeb 15, 2023\n\n\n임지윤\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntest: quarto test2\n\n\n\n\n\n\n\ntest\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2023\n\n\n임지윤\n\n\n\n\n\n\n  \n\n\n\n\ntest: quarto test1\n\n\n\n\n\n\n\ntest\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2023\n\n\n임지윤\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntest: quarto test2\n\n\n\n\n\n\n\ntest\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2023\n\n\n임지윤\n\n\n\n\n\n\nNo matching items"
  }
]